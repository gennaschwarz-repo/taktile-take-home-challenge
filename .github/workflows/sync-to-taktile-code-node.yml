# This is a workflow to Sync Code to Taktile Code Node

name: Sync Code to Taktile Code Node

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  sync-code:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Read the multiply python file
      - name: Read Python file
        id: read_multiple
        run: |
          FILE_PATH="Multiply.py"
          CONTENT=$(cat $FILE_PATH | jq -Rs .)
          echo "code=$CONTENT" >> $GITHUB_OUTPUT

      # Read the multiply python file
      - name: Read Python file
        id: read_summarize
        run: |
          FILE_PATH="Summarize.py"
          CONTENT=$(cat $FILE_PATH | jq -Rs .)
          echo "code=$CONTENT" >> $GITHUB_OUTPUT

      # Return a list of Decision Flows in a NB36â€™s workspace.
      - name: List Decision Flows
        id: get_flow_id
        run: |
          RESPONSE=$(curl -X 'POST' \
            'https://eu-central-1.taktile-org.decide.taktile.com/run/api/v1/flows/list-decision-graphs/sandbox/decide' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'X-Api-Key: ${{ secrets.TAKTILE_API_KEY }}' \
            -d '{
            "data": {
              "organization_name": "NB36"
            },
            "metadata": {
            "version": "v1.0",
            "entity_id": "string"
            },
            "control": {
              "execution_mode": "sync"
            }
          }')

          echo "List Decision Flows API Response: $RESPONSE"

          FLOW_ID=$(echo "$RESPONSE" | jq -r '.data.flows.flow_id')
          echo "Flow ID: $FLOW_ID"

          echo "flow_id=$FLOW_ID" >> $GITHUB_OUTPUT

      # Return an overview of the nodes in a specific graph
      - name: Get Decision Graph
        id: get_deicision_graph
        run: |
          curl -X 'POST' \
            'https://eu-central-1.taktile-org.decide.taktile.com/run/api/v1/flows/get-decision-graph/sandbox/decide' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'X-Api-Key: ${{ secrets.TAKTILE_API_KEY }}' \
            -d '{
            "data": {
              "flow_id": ${{ steps.get_flow_id.outputs.flow_id }}
            },
            "metadata": {
              "version": "v1.0",
              "entity_id": "string"
            },
            "control": {
              "execution_mode": "sync"
            }
          }'
      
